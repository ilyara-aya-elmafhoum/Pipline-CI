name: backend CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-test-run:
    runs-on: self-hosted

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # 3. Cache Maven
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Wait for PostgreSQL
      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            nc -z localhost 5432 && exit 0
            sleep 3
          done
          exit 1

      # 5. Build Maven package (skip tests)
      - name: Build with Maven
        run: ./mvnw clean package -DskipTests
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: secret
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}



      - name: Import SonarQube certificate into JDK
        run: |
          echo | openssl s_client -connect 188.213.128.197:443 -servername 188.213.128.197 2>/dev/null | openssl x509 > sonar.crt
          $JAVA_HOME/bin/keytool -import -trustcacerts -noprompt -alias sonar -file sonar.crt -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit


      # 6. SonarQube Analysis
      - name: SonarQube Analysis
        run: |
          ./mvnw sonar:sonar \
            -Dsonar.projectKey=backend-ci \
            -Dsonar.host.url=https://188.213.128.197 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            #-Djavax.net.ssl.trustStore=/dev/null
      # 7. Build Docker image
      - name: Build Docker image
        run: docker build -t ilyara-backend:latest .

      # 8. Run selective tests (skip ApplicationTests)
      - name: Run selective tests
        run: ./mvnw test -Dtest='!ApplicationTests' -Dsurefire.failIfNoSpecifiedTests=false
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: secret

      # 9. Run Spring Boot App (optional)
      - name: Run Spring Boot App
        run: ./mvnw spring-boot:run &
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: secret
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
